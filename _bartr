#compdef _bartr bartr

function _bartr(){
  local line state

  _arguments -C \
    '--help[Display help and usage]' \
    '--version[Display version info]' \
    '1: :cmds' \
    '*: :arg :->args'

  case $state in
    cmds)
      _values "command" \
      "app[App commands]" \
      "ls[List the apps]" \
      "new[Create a new app]"
    ;;

    args)
      case $line[1] in
        app)
          _app
        ;;
        new)
          _new
        ;;
      esac
    ;;

    new)
      _new
      return 0
    ;;
  esac
}

function _app(){
  local state

  case $words[3] in
    create)
      _arguments \
      '--help[Display help and usage]' \
      '--app-name[Application name]' \
      '--namespace[Kubernetes namespace]' \
      '--image[Image name]' \
      '--cpu-limit[CPU Limit (default: 250m)]' \
      '--memory-limit[Memory Limit (default: 256Mi)]' \
      '--cpu-request[CPU Request (default: 250m)]' \
      '--memory-request[Memory Request (default: 256Mi)]' \
      '--args[Application arguments]' \
      '--readiness-probe[Readiness Probe path (default: /healthz)]' \
      '--liveness-probe[Liveness Probe path (default: /healthz)]' \
      '--port[Port app exposes (default: 8080)]' \
      '--node-port[NodePort for app (default: 30080)]' \
      '--force[Force overwriting config]' \
      '2: :(create)'

      return 0
    ;;

    set)
      _arguments \
        '3:key:(AppName Namespace Args Image Port NodePort CpuLimit CpuRequest MemoryLimit MemoryRequest LivenessProbe ReadinessProbe)'
      return 0
    ;;
  esac

  _arguments \
    '--help[Display help and usage]' \
    '2: :_app_commands'

  _values \
    'create[Create a new app]' \
    'info[Get application info]' \
    'set[Set application values]'

}

function _new(){
  local state

  case $words[3] in
    dotnet|spring|ts)
      _arguments \
        '--help[Display help and usage]' \
        '3: :(webapi daemon)'
      return 0
    ;;
  esac

  _arguments \
    '--help[Display help and usage]' \
    '2: :(dotnet spring ts)'
}
